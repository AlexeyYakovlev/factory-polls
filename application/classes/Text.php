<?php

/**
 * Статический класс для работы со строками
 * @version 1.0
 * @author Yakovlev
 */
class Text extends Kohana_Text {

    /**
     * Метод производит транслитерацию всех русских символов
     * @param string $string - это строка, которую необходимо обработать
     */
    public static function Translit($string) {
        /* Инициализируем массив с данными. Где ключ - это русский символ, 
         * а значение это его латинский эквивалент.
         */
        $converter = array(
            'а' => 'a', 'б' => 'b', 'в' => 'v',
            'г' => 'g', 'д' => 'd', 'е' => 'e',
            'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
            'и' => 'i', 'й' => 'y', 'к' => 'k',
            'л' => 'l', 'м' => 'm', 'н' => 'n',
            'о' => 'o', 'п' => 'p', 'р' => 'r',
            'с' => 's', 'т' => 't', 'у' => 'u',
            'ф' => 'f', 'х' => 'h', 'ц' => 'c',
            'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
            'ь' => "'", 'ы' => 'y', 'ъ' => "'",
            'э' => 'e', 'ю' => 'yu', 'я' => 'ya',
            'А' => 'A', 'Б' => 'B', 'В' => 'V',
            'Г' => 'G', 'Д' => 'D', 'Е' => 'E',
            'Ё' => 'E', 'Ж' => 'Zh', 'З' => 'Z',
            'И' => 'I', 'Й' => 'Y', 'К' => 'K',
            'Л' => 'L', 'М' => 'M', 'Н' => 'N',
            'О' => 'O', 'П' => 'P', 'Р' => 'R',
            'С' => 'S', 'Т' => 'T', 'У' => 'U',
            'Ф' => 'F', 'Х' => 'H', 'Ц' => 'C',
            'Ч' => 'Ch', 'Ш' => 'Sh', 'Щ' => 'Sch',
            'Ь' => "'", 'Ы' => 'Y', 'Ъ' => "'",
            'Э' => 'E', 'Ю' => 'Yu', 'Я' => 'Ya',
        );
        /* strtr - встроенная PHP функция возвращает строку $string, в которой  
         * каждое вхождение любого символа из перечисленных в $converter. 
         * $converter должен быть массивом, индексы которого трактуются как 
         * строки поиска, а соответствующие значения - как строки замены.
         */
        return strtr($string, $converter);
    }

    /**
     * Метод ассоциирует целочисленные ключи массива в буквы по принципу:
     * 0 = A
     * 1 = B
     * 2 = C
     * ...
     * 12 = L 
     * @return array Возвращает массив ассоциированных значений.
     * @param array $data - это массив, который необходимо обработать
     */
    public static function ConvertNumberInLetter($array) {
        // Инициализируем массив ассоциаций
        $letters = array(
            0 => 'A', 1 => 'B', 2 => 'C', 3 => 'D', 4 => 'E', 5 => 'F',
            6 => 'G', 7 => 'H', 8 => 'I', 9 => 'J', 10 => 'K', 11 => 'L',
            12 => 'M', 13 => 'N', 14 => 'O', 15 => 'P', 16 => 'Q', 17 => 'R',
            18 => 'S', 19 => 'T', 20 => 'U', 21 => 'V', 22 => 'W', 23 => 'X',
            24 => 'Y', 25 => 'Z'
        );
        // Готовим массив для заполнения данными
        $assocArray = array();
        // Обходим циклом входящий массив
        foreach ($array as $key => $val) {
            // Ассоциируем ключи массива
            $assocArray[$key] = $letters[$key];
        }
        // Возвращаем результат
        return $assocArray;
    }

    public static function DateToDir() {
        return date("Y" . DS . "m" . DS . "d");
    }

}

?>
